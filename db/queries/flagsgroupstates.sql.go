// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: flagsgroupstates.sql

package queries

import (
	"context"

	"github.com/jackc/pgtype"
)

const createFlagsGroupState = `-- name: CreateFlagsGroupState :one
INSERT INTO flags_group_states(json, flags_group_id, environment_id)
VALUES ($1, $2, $3)
RETURNING uuid, id, flags_group_id, json, environment_id, created_at
`

type CreateFlagsGroupStateParams struct {
	Json          pgtype.JSONB `json:"json"`
	FlagsGroupID  *int32       `json:"-"`
	EnvironmentID *int32       `json:"-"`
}

func (q *Queries) CreateFlagsGroupState(ctx context.Context, arg CreateFlagsGroupStateParams) (FlagsGroupState, error) {
	row := q.db.QueryRow(ctx, createFlagsGroupState, arg.Json, arg.FlagsGroupID, arg.EnvironmentID)
	var i FlagsGroupState
	err := row.Scan(
		&i.Uuid,
		&i.ID,
		&i.FlagsGroupID,
		&i.Json,
		&i.EnvironmentID,
		&i.CreatedAt,
	)
	return i, err
}

const getFlagsGroupStateByID = `-- name: GetFlagsGroupStateByID :one
SELECT uuid, id, flags_group_id, json, environment_id, created_at
FROM flags_group_states
WHERE id = $1
`

func (q *Queries) GetFlagsGroupStateByID(ctx context.Context, id *int32) (FlagsGroupState, error) {
	row := q.db.QueryRow(ctx, getFlagsGroupStateByID, id)
	var i FlagsGroupState
	err := row.Scan(
		&i.Uuid,
		&i.ID,
		&i.FlagsGroupID,
		&i.Json,
		&i.EnvironmentID,
		&i.CreatedAt,
	)
	return i, err
}

const getFlagsGroupStateByUUID = `-- name: GetFlagsGroupStateByUUID :one
SELECT uuid, id, flags_group_id, json, environment_id, created_at
FROM flags_group_states
WHERE uuid = $1
`

func (q *Queries) GetFlagsGroupStateByUUID(ctx context.Context, uuid string) (FlagsGroupState, error) {
	row := q.db.QueryRow(ctx, getFlagsGroupStateByUUID, uuid)
	var i FlagsGroupState
	err := row.Scan(
		&i.Uuid,
		&i.ID,
		&i.FlagsGroupID,
		&i.Json,
		&i.EnvironmentID,
		&i.CreatedAt,
	)
	return i, err
}
