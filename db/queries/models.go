// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package queries

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/jackc/pgtype"
)

type FeatureFlagType string

const (
	FeatureFlagTypeBoolean FeatureFlagType = "boolean"
)

func (e *FeatureFlagType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = FeatureFlagType(s)
	case string:
		*e = FeatureFlagType(s)
	default:
		return fmt.Errorf("unsupported scan type for FeatureFlagType: %T", src)
	}
	return nil
}

type NullFeatureFlagType struct {
	FeatureFlagType FeatureFlagType
	Valid           bool // Valid is true if FeatureFlagType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullFeatureFlagType) Scan(value interface{}) error {
	if value == nil {
		ns.FeatureFlagType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.FeatureFlagType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullFeatureFlagType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.FeatureFlagType), nil
}

type UserRole string

const (
	UserRoleMember UserRole = "member"
	UserRoleAdmin  UserRole = "admin"
)

func (e *UserRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserRole(s)
	case string:
		*e = UserRole(s)
	default:
		return fmt.Errorf("unsupported scan type for UserRole: %T", src)
	}
	return nil
}

type NullUserRole struct {
	UserRole UserRole
	Valid    bool // Valid is true if UserRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserRole) Scan(value interface{}) error {
	if value == nil {
		ns.UserRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserRole), nil
}

type Environment struct {
	ID        int32
	Name      string
	CreatedAt time.Time
	UpdatedAt time.Time
}

type FeatureFlag struct {
	ID        int32
	ProjectID int64
	Type      FeatureFlagType
	Name      string
}

type FeatureState struct {
	ID            int32
	EnvironmentID int64
	FeatureFlagID int64
	Enabled       bool
	Value         pgtype.JSONB
	CreatedAt     time.Time
	UpdatedAt     time.Time
}

type Organization struct {
	ID        int32
	Name      string
	CreatedAt time.Time
	UpdatedAt time.Time
}

type OrganizationMember struct {
	UserID    int64
	OrgID     int64
	CreatedAt time.Time
	UpdatedAt time.Time
}

type OrganizationOnboarding struct {
	OrgID         int64
	CreateProject sql.NullBool
}

type Project struct {
	ID        int32
	Name      string
	OrgID     int64
	OwnerID   int64
	CreatedAt time.Time
	UpdatedAt time.Time
}

type ProjectEnviornment struct {
	ProjectID     int64
	EnvironmentID int64
	CreatedAt     time.Time
	UpdatedAt     time.Time
}

type ProjectFeature struct {
	ProjectID     int64
	FeatureFlagID int64
	CreatedAt     time.Time
	UpdatedAt     time.Time
}

type ProjectMember struct {
	UserID    int64
	ProjectID int64
	CreatedAt time.Time
	UpdatedAt time.Time
}

type User struct {
	ID            int32
	Name          string
	Password      string
	Email         string
	EmailVerified bool
	Role          UserRole
	CreatedAt     time.Time
	UpdatedAt     time.Time
}
